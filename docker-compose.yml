services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    platform: linux/amd64
    #ports:
    #  - "${FRONT_PORT:-5173}:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - HOST=
    env_file:
      - .env
    depends_on:
      - backend
    networks:
      - transcendance

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    platform: linux/amd64
    #ports:
    #  - "${BACK_PORT:-3000}:3000"
    volumes:
      - ./back:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    env_file:
      - .env
    networks:
      - transcendance

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./monitoring/alerts.yml:/etc/prometheus/alerts.yml
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=15d'
    networks:
      - transcendance

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    networks:
      - transcendance

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-graf123}
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - transcendance

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - transcendance

volumes:
  grafana-storage:

networks:
  transcendance:
    driver: bridge
