events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuration du certificat SSL
    ssl_certificate /etc/nginx/ssl/transcendance.crt;
    ssl_certificate_key /etc/nginx/ssl/transcendance.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Redirection HTTP -> HTTPS (port 443 exposé côté hôte)
    server {
        listen 80;
        server_name _;

        return 308 https://$host$request_uri;
    }

    # Configuration HTTPS principale
    server {
        listen 443 ssl;
        server_name localhost;
        
        # Frontend Vue.js (Vite dev server + HMR over WebSocket)
        location / {
            proxy_pass http://frontend:5173;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;            # preserve port in Host
            proxy_set_header X-Forwarded-Host $http_host; # pass original host:port to app
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400;
        }

        # Backend API
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Fichiers statiques (avatars / bannières)
        location /avatars/ {
            proxy_pass http://backend:3000/avatars/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /banners/ {
            proxy_pass http://backend:3000/banners/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # WebSockets (si nécessaire)
        location /socket.io/ {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
        }
    }
}
